<Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <TextBox Name="txtInput" VerticalContentAlignment="Center" Width="250" Height="40"
                 FontSize="16" Text="{Binding BoundText, UpdateSourceTrigger=PropertyChanged, Mode=OneWayToSource}"/>
        <Button Grid.Row="1" Name="btnSet" Content="Set" Width="100" Height="40"
                Click="btnSet_Click"/>
        <TextBlock Grid.Row="2" Name="tbResult" FontSize="16" Text="{Binding BoundText}"
                   VerticalAlignment="Center" HorizontalAlignment="Center"/>
        
    </Grid>

     public partial class MainWindow : Window, INotifyPropertyChanged
    {
        //bool running = false;
        public MainWindow()
        {
            DataContext = this;
            InitializeComponent();
           
        }

        
        public event PropertyChangedEventHandler? PropertyChanged;


        private string boundText;
        public string BoundText   
        {
            get { return boundText; }
            set { 
                boundText = value;
                OnPropertyChanged();
            }
        }

        private void btnSet_Click(object sender, RoutedEventArgs e)
        {
            BoundText = "set from code";
        }

        private void OnPropertyChanged([CallerMemberName] string propertyName=null)
        {
            PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }